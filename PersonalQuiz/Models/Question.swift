//
//  Question.swift
//  PersonalQuiz
//
//  Created by Alexander Shevtsov on 23.04.2024.
//

    // –µ—Å–ª–∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤–∞–∂–Ω—ã —Ç–æ struct
struct Question { // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –Ω–∏—á–µ–≥–æ –º–µ–Ω—è—Ç—å, —Ç–æ –≤—Å–µ let
    let title: String
    let responseType: ResponseType // —ç—Ç–æ—Ç —Ç–∏–ø –º—ã —Å–æ–∑–¥–∞–ª–∏ —Å–∞–º–∏
    let answers: [Answer] // —Å–∞–º–∏ —Å–æ–∑–¥–∞–ª–∏ —Ç–∏–ø
    
    // MVP - –¥–∞–Ω–Ω—ã–µ, –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–≥–∏—Ö
   static func getQuestions() -> [Question] { //static –¥–µ–ª–∞–µ—Ç –º–µ—Ç–æ–¥ –Ω–µ –Ω–∞—Å–ª–µ–¥—É–µ–º—ã–º
        [
            Question(
                title: "–ö–∞–∫—É—é –ø–∏—â—É –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?",
                responseType: .single,
                answers: [ // –≤ main —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –æ—É—Ç–ª–µ—Ç–æ–≤
                    Answer(title: "–°—Ç–µ–π–∫", animal: .dog),
                    Answer(title: "–†—ã–±–∞", animal: .cat),
                    Answer(title: "–ú–æ—Ä–∫–æ–≤—å", animal: .rabbit),
                    Answer(title: "–ö—É–∫—É—Ä—É–∑–∞", animal: .turtle)
                ]
            ),
            Question(
                title: "–ß—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ?",
                responseType: .multiple,
                answers: [
                    Answer(title: "–ü–ª–∞–≤–∞—Ç—å", animal: .dog),
                    Answer(title: "–°–ø–∞—Ç—å", animal: .cat),
                    Answer(title: "–û–±—å–Ω–∏–º–∞—Ç—å—Å—è", animal: .rabbit),
                    Answer(title: "–ï—Å—Ç—å", animal: .turtle)
                ]
            ),
            Question(
                title: "–ù–∞ –º–∞—à–∏–Ω–µ –∫–∞—Ç–∞–µ—Ç–µ—Å—å?",
                responseType: .ranged,
                answers: [
                    Answer(title: "–ù–µ–Ω–∞–≤–∏–∂—É", animal: .cat),
                    Answer(title: "–ù–µ—Ä–≤–Ω–∏—á–∞—é", animal: .rabbit),
                    Answer(title: "–ù–µ –∑–∞–º–µ—á–∞—é", animal: .turtle),
                    Answer(title: "–û–±–æ–∂–∞—é", animal: .dog)
                ]
            )
        ]
    }
}

// —Å–æ–∑–¥–∞–µ–º —Å–≤–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
enum ResponseType { // –µ—Å–ª–∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –≤–∞–∂–Ω—ã —Ç–æ enum
    case single
    case multiple
    case ranged
}

struct Answer {
    let title: String
    let animal: Animal
}

enum Animal: Character {
    case dog = "üê∂"
    case cat = "üê±"
    case rabbit = "üê∞"
    case turtle = "üê¢"
    
    var definition: String { // –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ
        switch self { // self - —Å–∞–º–∏ —Å–µ–±—è
        case .dog:
            return "–í–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –±—ã—Ç—å —Å –¥—Ä—É–∑—å—è–º–∏."
        case .cat:
            return "–í—ã —Å–µ–±–µ –Ω–∞ —É–º–µ"
        case .rabbit:
            return "–í–∞–º –Ω—Ä–∞–≤–∏—Ç—å—Å—è –≤—Å–µ –º—è–≥–∫–æ–µ"
        case .turtle:
            return "–í–∞—à–∞ —Å–∏–ª–∞ - –º—É–¥—Ä–æ—Å—Ç—å"
        }
    }
}
// –ø—Ä–∏–º–µ—Ä –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
//let animal: Animal = .dog
//animal.definition
